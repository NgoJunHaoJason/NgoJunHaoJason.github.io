{"version":3,"sources":["assets/images/smiley_face.jpg","resume/about/About.js","resume/education/Education.js","resume/experience/Experience.js","assets/images/dbs_logo.png","assets/images/auralaid_logo.png","assets/images/ovt_logo.png","resume/projects/Projects.js","resume/Resume.js","LoadingScreen.js","serviceWorker.js","i18n.js","index.js"],"names":["About","props","t","Container","Header","textAlign","size","Content","Image","className","src","ProfilePicture","rounded","bordered","Subheader","Card","centered","Description","List","Item","Icon","name","target","rel","href","sectionIcons","faLaptopCode","faRobot","faBrain","Education","icon","faGraduationCap","Grid","stackable","doubling","padded","Row","columns","Column","Group","Meta","Extra","divided","returnObjects","map","section","header","subheader","bulleted","subjects","subject","companyLogos","Experience","faBriefcase","job","contentStyle","contentArrowStyle","date","dateClassName","logo","circular","iconClassName","companyName","jobTitle","description","item","Label","technologies","ProjectTitle","url","Projects","faTasks","itemsPerRow","project","fluid","extra","Resume","useTranslation","i18n","Button","floated","onClick","language","changeLanguage","translateButtonOnClick","Divider","LoadingScreen","Dimmer","active","Loader","Boolean","window","location","hostname","match","use","initReactI18next","init","interpolation","escapeValue","lng","fallbackLng","resources","en","translation","english","cn","chinese","ReactDOM","render","StrictMode","fallback","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7dabca1b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/smiley_face.110edfed.jpg\";","import React from 'react';\n\nimport {\n    Card,\n    Container,\n    Header,\n    Image,\n    List,\n} from 'semantic-ui-react';\n\nimport ProfilePicture from '../../assets/images/smiley_face.jpg';\nimport './About.css';\n\nfunction About(props) {\n    const { t } = props;\n\n    return (\n        <Container>\n            <Header\n                textAlign='center'\n                size='huge'\n            >\n                <Header.Content>\n                    <Image\n                        className='ProfilePicture'\n                        src={ProfilePicture}\n                        size='tiny'\n                        rounded\n                        bordered\n                    />\n                    {t('about.name')}\n                </Header.Content>\n\n                <Header.Subheader>\n                    {t('about.description')}\n                </Header.Subheader>\n            </Header>\n\n            <Card centered>\n                <Card.Content>\n                    <Card.Description>\n                        <List>\n                            <List.Item>\n                                <List.Icon name='mail' />\n                                <List.Content>\n                                    <a\n                                        target='_blank'\n                                        rel='noopener noreferrer'\n                                        href='mailto:njhjason@protonmail.com'\n                                    >\n                                        njhjason@protonmail.com\n                                    </a>\n                                </List.Content>\n                            </List.Item>\n\n                            <List.Item>\n                                <List.Icon name='github' />\n                                <List.Content>\n                                    <a\n                                        target='_blank'\n                                        rel='noopener noreferrer'\n                                        href='https://github.com/NgoJunHaoJason'\n                                    >\n                                        {t('about.github')}\n                                    </a>\n                                </List.Content>\n                            </List.Item>\n\n                            <List.Item>\n                                <List.Icon name='linkedin' />\n                                <List.Content>\n                                    <a\n                                        target='_blank'\n                                        rel='noopener noreferrer'\n                                        href='https://www.linkedin.com/in/ngo-jun-hao-jason/'\n                                    >\n                                        {t('about.linkedin')}\n                                    </a>\n                                </List.Content>\n                            </List.Item>\n\n                            <List.Item>\n                                <List.Icon name='file pdf' />\n                                <List.Content>\n                                    <a\n                                        target='_blank'\n                                        rel='noopener noreferrer'\n                                        href='https://github.com/NgoJunHaoJason/NgoJunHaoJason.github.io/tree/develop/documents/resume_ngo_jun_hao_jason_no_phone.pdf'\n                                    >\n                                        {t('about.pdfVersion')}\n                                    </a>\n                                </List.Content>\n                            </List.Item>\n                        </List>\n                    </Card.Description>\n                </Card.Content>\n            </Card>\n        </Container>\n    );\n}\n\nexport default About;\n","import React from 'react';\n\nimport {\n    Container,\n    Header,\n    Grid,\n    Item,\n    List,\n} from 'semantic-ui-react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faGraduationCap,\n    faLaptopCode,\n    faRobot,\n    faBrain,\n} from '@fortawesome/free-solid-svg-icons';\n\nconst sectionIcons = {\n    'faLaptopCode': faLaptopCode,\n    'faRobot': faRobot,\n    'faBrain': faBrain,\n};\n\nfunction Education(props) {\n    const { t } = props;\n\n    return (\n        <Container>\n            <Header\n                size='large'\n            >\n                <Header.Content>\n                    <FontAwesomeIcon icon={faGraduationCap} />\n                    &nbsp;\n                    {t('education.header')}\n                </Header.Content>\n            </Header>\n\n            <Container>\n                <Grid stackable doubling padded='horizontally'>\n                    <Grid.Row columns={1}>\n                        <Grid.Column>\n                            <Item.Group>\n                                <Item>\n                                    <Item.Content>\n                                        <Item.Header>\n                                            {t('education.university.name')}\n                                        </Item.Header>\n                                        <Item.Meta>\n                                            {t('education.university.date')}\n                                        </Item.Meta>\n                                        <Item.Description>\n                                            {t('education.university.degree')}\n                                        </Item.Description>\n                                        <Item.Description>\n                                            {t('education.university.honours')}, {t('education.university.gpa')}\n                                        </Item.Description>\n                                        <Item.Extra>\n                                            <a\n                                                target='_blank'\n                                                rel='noopener noreferrer'\n                                                href='https://github.com/NgoJunHaoJason/NgoJunHaoJason.github.io/tree/develop/documents/degree_transcript_ngo_jun_hao_jason.opencert'\n                                            >\n                                                {t('education.university.cert')}\n                                            </a>\n                                            (<a\n                                                target='_blank'\n                                                rel='noopener noreferrer'\n                                                href='https://www.opencerts.io/'\n                                            >\n                                                {t('education.university.verify')}\n                                            </a>)\n                                        </Item.Extra>\n                                    </Item.Content>\n                                </Item>\n                            </Item.Group>\n                        </Grid.Column>\n                    </Grid.Row>\n\n                    <Grid.Row columns={3} divided>\n                        {t('education.sections', {returnObjects: true}).map(section => (\n                            <Grid.Column>\n                                <Item.Group>\n                                    <Item>\n                                        <Item.Content>\n                                            <Item.Header>\n                                                {section.header}\n                                            </Item.Header>\n                                            <Item.Meta>\n                                                <FontAwesomeIcon icon={sectionIcons[section.icon]} />\n                                                &nbsp;\n                                                {section.subheader}\n                                            </Item.Meta>\n\n                                            <Item.Description>\n                                                <List bulleted>\n                                                    {section.subjects.map(subject => (\n                                                        <List.Item>{subject}</List.Item>\n                                                    ))}\n                                                </List>\n                                            </Item.Description>\n                                        </Item.Content>\n                                    </Item>\n                                </Item.Group>\n                            </Grid.Column>\n                        ))}\n                    </Grid.Row>\n                </Grid>\n            </Container>\n        </Container>\n    );\n}\n\nexport default Education;","import React from 'react';\n\nimport {\n    Container,\n    Header,\n    Label,\n    Image,\n} from 'semantic-ui-react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faBriefcase,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport {\n    VerticalTimeline,\n    VerticalTimelineElement,\n} from 'react-vertical-timeline-component';\n\nimport 'react-vertical-timeline-component/style.min.css';\nimport './Experience.css';\n\nimport dbsLogo from '../../assets/images/dbs_logo.png';\nimport auralaidLogo from '../../assets/images/auralaid_logo.png';\nimport ovtLogo from '../../assets/images/ovt_logo.png';\n\nconst companyLogos = {\n    'dbsLogo': dbsLogo,\n    'auralaidLogo': auralaidLogo,\n    'ovtLogo': ovtLogo,\n};\n\nfunction Experience(props) {\n    const { t } = props;\n\n    return (\n        <Container>\n            <Header\n                size='large'\n            >\n                <Header.Content>\n                    <FontAwesomeIcon icon={faBriefcase} />\n                    &nbsp;\n                    {t('experience.header')}\n                </Header.Content>\n            </Header>\n\n            <VerticalTimeline className='VerticalTimeline'>\n                {t('experience.jobs', {returnObjects: true}).map(job => (\n                    <VerticalTimelineElement\n                        className='VerticalTimelineElement'\n                        contentStyle={job.contentStyle}\n                        contentArrowStyle={job.contentArrowStyle}\n                        date={job.date}\n                        dateClassName='TimelineDate'\n                        icon={<Image src={companyLogos[job.logo]} circular />}\n                        iconClassName={job.iconClassName}\n                    >\n                        <h3 className='TimelineText'>{job.companyName}</h3>\n                        <h4 className='TimelineText'>{job.jobTitle}</h4>\n                        <ul>\n                            {job.description.map(item => (<li>{item}</li>))}\n                        </ul>\n\n                        <Label.Group>\n                            {job.technologies.map(item => (<Label>{item}</Label>))}\n                        </Label.Group>\n                    </VerticalTimelineElement>\n                ))}\n            </VerticalTimeline>\n        </Container>\n    );\n}\n\nexport default Experience;","export default __webpack_public_path__ + \"static/media/dbs_logo.55729c35.png\";","export default __webpack_public_path__ + \"static/media/auralaid_logo.ddc2f44d.png\";","export default __webpack_public_path__ + \"static/media/ovt_logo.da68fb14.png\";","import React from 'react';\n\nimport {\n    Card,\n    Container,\n    Header,\n    Label,\n    Icon,\n} from 'semantic-ui-react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTasks } from '@fortawesome/free-solid-svg-icons';\n\n// display title as a link only if it exists\nfunction ProjectTitle(props) {\n    const { header, url } = props;\n\n    if (url === '') {\n        return header;\n    } else {\n        return (\n            <a\n                target='_blank'\n                rel='noopener noreferrer'\n                href={url}\n            >\n                {header}\n            </a> \n        )\n    }\n}\n\nfunction Projects(props) {\n    const { t } = props;\n\n    return (\n        <Container>\n            <Header\n                size='large'\n            >\n                <Header.Content>\n                    <FontAwesomeIcon icon={faTasks} />\n                    &nbsp;\n                    {t('projects.header')}\n                </Header.Content>\n            </Header>\n\n            <Card.Group itemsPerRow={2} centered doubling stackable>\n                {t('projects.list', {returnObjects: true}).map(project => (\n                    <Card fluid>\n                        <Card.Content>\n                            <Card.Header>\n                                <ProjectTitle header={project.header} url={project.url} />\n                            </Card.Header>\n                            <Card.Description>\n                                {t(project.subheader)}\n                            </Card.Description>\n                            <Card.Meta>\n                                {t(project.date)}\n                            </Card.Meta>\n\n                            <Card.Description>\n                                <ul>\n                                    {project.description.map(item => (<li>{item}</li>))}\n                                </ul>\n                            </Card.Description>\n                        </Card.Content>\n\n                        <Card.Content extra>\n                            <Label.Group>\n                                {project.technologies.map(item => (<Label>{item}</Label>))}\n                            </Label.Group>\n                        </Card.Content>\n                    </Card>\n                ))}\n            </Card.Group>\n        </Container>\n    );\n}\n\nexport default Projects;\n","import React from 'react';\n\nimport { useTranslation } from 'react-i18next';\n\nimport {\n    Container,\n    Divider,\n    Button,\n} from 'semantic-ui-react';\n\nimport About from './about/About';\nimport Education from './education/Education';\nimport Experience from './experience/Experience';\nimport Projects from './projects/Projects';\n\nimport 'semantic-ui-css/semantic.min.css'\nimport './Resume.css'\n\nfunction Resume() {\n    const { t, i18n } = useTranslation();\n\n    const translateButtonOnClick = () => {\n        const language = (i18n.language === 'en')? 'cn' : 'en';\n        i18n.changeLanguage(language);\n    };\n\n    return (\n        <Container fluid className='App'>\n            {/* this button does nothing, except to centre the header on mobile */}\n            <Button\n                className='TranslateCounterWeight'\n                floated='left'\n                size='mini'\n            >\n                {t('language')}\n            </Button>\n            \n            <Button\n                floated='right'\n                size='mini'\n                onClick={() => translateButtonOnClick()}\n            >\n                {t('language')}\n            </Button>\n\n            <About t={t} />\n            <Divider />\n\n            <Education t={t} />\n            <Divider />\n\n            <Experience t={t} />\n            <Divider />\n\n            <Projects t={t} />\n        </Container>\n    );\n}\n\nexport default Resume;\n","import React from 'react';\n\nimport {\n    Container,\n    Dimmer,\n    Loader,\n} from 'semantic-ui-react';\n\nfunction LoadingScreen() {\n    return (\n        <Container fluid>\n            <Dimmer active>\n                <Loader />\n            </Dimmer>\n        </Container>\n    );\n}\n\nexport default LoadingScreen;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport english from './assets/translations/english.json';\nimport chinese from './assets/translations/chinese.json';\n\ni18n\n    .use(initReactI18next)\n    .init({\n        interpolation: { escapeValue: false },\n        lng: 'en',\n        fallbackLng: 'en',\n        resources: {\n            en: {\n                translation: english,\n            },\n            cn: {\n                translation: chinese,\n            },\n        },\n    });\n\nexport default i18n;\n","import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Resume from './resume/Resume';\nimport LoadingScreen from './LoadingScreen';\n\nimport * as serviceWorker from './serviceWorker';\nimport './i18n';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Suspense fallback={<LoadingScreen />}>\n            <Resume />\n        </Suspense>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}