{"version":3,"sources":["assets/images/smiley_face.jpg","resume/about/About.js","resume/education/Education.js","assets/images/dbs_logo.png","assets/images/auralaid_logo.png","assets/images/ovt_logo.png","resume/experience/Experience.js","resume/projects/Projects.js","resume/Resume.js","LoadingScreen.js","serviceWorker.js","i18n.js","index.js"],"names":["About","props","t","Container","Header","textAlign","size","Content","Image","className","src","ProfilePicture","rounded","bordered","Subheader","Card","centered","Description","List","Item","Icon","name","target","rel","href","Education","icon","faGraduationCap","Grid","stackable","doubling","padded","Row","columns","Column","Group","Meta","Extra","divided","faLaptopCode","bulleted","faRobot","faBrain","Experience","faBriefcase","contentStyle","background","color","contentArrowStyle","borderRight","date","dateClassName","DBSLogo","circular","Label","AuralAidLogo","iconClassName","OVTLogo","Projects","faTasks","itemsPerRow","fluid","extra","Resume","useTranslation","i18n","Button","floated","onClick","language","changeLanguage","translateButtonOnClick","Divider","LoadingScreen","Dimmer","active","Loader","Boolean","window","location","hostname","match","use","initReactI18next","init","interpolation","escapeValue","lng","fallbackLng","resources","en","translation","english","cn","chinese","ReactDOM","render","StrictMode","fallback","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4166f84b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/smiley_face.110edfed.jpg\";","import React from 'react';\n\nimport {\n    Card,\n    Container,\n    Header,\n    Image,\n    List,\n} from 'semantic-ui-react';\n\nimport ProfilePicture from '../../assets/images/smiley_face.jpg';\nimport './About.css';\n\nfunction About(props) {\n    const { t } = props;\n\n    return (\n        <Container>\n            <Header\n                textAlign='center'\n                size='huge'\n            >\n                <Header.Content>\n                    <Image\n                        className='ProfilePicture'\n                        src={ProfilePicture}\n                        size='tiny'\n                        rounded\n                        bordered\n                    />\n                    {t('about.name')}\n                </Header.Content>\n\n                <Header.Subheader>\n                    {t('about.description')}\n                </Header.Subheader>\n            </Header>\n\n            <Card centered>\n                <Card.Content>\n                    <Card.Description>\n                        <List>\n                            <List.Item>\n                                <List.Icon name='mail' />\n                                <List.Content>\n                                    <a\n                                        target='_blank'\n                                        rel='noopener noreferrer'\n                                        href='mailto:njhjason@protonmail.com'\n                                    >\n                                        njhjason@protonmail.com\n                                    </a>\n                                </List.Content>\n                            </List.Item>\n\n                            <List.Item>\n                                <List.Icon name='github' />\n                                <List.Content>\n                                    <a\n                                        target='_blank'\n                                        rel='noopener noreferrer'\n                                        href='https://github.com/NgoJunHaoJason'\n                                    >\n                                        {t('about.github')}\n                                    </a>\n                                </List.Content>\n                            </List.Item>\n\n                            <List.Item>\n                                <List.Icon name='linkedin' />\n                                <List.Content>\n                                    <a\n                                        target='_blank'\n                                        rel='noopener noreferrer'\n                                        href='https://www.linkedin.com/in/ngo-jun-hao-jason/'\n                                    >\n                                        {t('about.linkedin')}\n                                    </a>\n                                </List.Content>\n                            </List.Item>\n\n                            <List.Item>\n                                <List.Icon name='file pdf' />\n                                <List.Content>\n                                    <a\n                                        target='_blank'\n                                        rel='noopener noreferrer'\n                                        href='https://github.com/NgoJunHaoJason/NgoJunHaoJason.github.io/tree/develop/documents/resume_ngo_jun_hao_jason_no_phone.pdf'\n                                    >\n                                        {t('about.pdf-version')}\n                                    </a>\n                                </List.Content>\n                            </List.Item>\n                        </List>\n                    </Card.Description>\n                </Card.Content>\n            </Card>\n        </Container>\n    );\n}\n\nexport default About;\n","import React from 'react';\n\nimport {\n    Container,\n    Header,\n    Grid,\n    Item,\n    List,\n} from 'semantic-ui-react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faGraduationCap,\n    faLaptopCode,\n    faRobot,\n    faBrain,\n} from '@fortawesome/free-solid-svg-icons';\n\nfunction Education(props) {\n    const { t } = props;\n\n    return (\n        <Container>\n            <Header\n                size='large'\n            >\n                <Header.Content>\n                    <FontAwesomeIcon icon={faGraduationCap} />\n                    &nbsp;\n                    {t('education.header')}\n                </Header.Content>\n            </Header>\n\n            <Container>\n\n\n                <Grid stackable doubling padded='horizontally'>\n                    <Grid.Row columns={1}>\n                        <Grid.Column>\n                            <Item.Group>\n                                <Item>\n                                    <Item.Content>\n                                        <Item.Header>\n                                            {t('education.university.name')}\n                                        </Item.Header>\n                                        <Item.Meta>\n                                            {t('education.university.date')}\n                                        </Item.Meta>\n                                        <Item.Description>\n                                            {t('education.university.degree')}\n                                        </Item.Description>\n                                        <Item.Description>\n                                            {t('education.university.honours')}, GPA: 4.46 / 5.00\n                                        </Item.Description>\n                                        <Item.Extra>\n                                            <a\n                                                target='_blank'\n                                                rel='noopener noreferrer'\n                                                href='https://github.com/NgoJunHaoJason/NgoJunHaoJason.github.io/tree/develop/documents/degree_transcript_ngo_jun_hao_jason.opencert'\n                                            >\n                                                {t('education.university.cert')}\n                                            </a>\n                                            (<a\n                                                target='_blank'\n                                                rel='noopener noreferrer'\n                                                href='https://www.opencerts.io/'\n                                            >\n                                                {t('education.university.verify')}\n                                            </a>)\n                                        </Item.Extra>\n                                    </Item.Content>\n                                </Item>\n                            </Item.Group>\n                        </Grid.Column>\n                    </Grid.Row>\n\n                    <Grid.Row columns={3} divided>\n                        <Grid.Column>\n                            <Item.Group>\n                                <Item>\n                                    <Item.Content>\n                                        <Item.Header>\n                                            {t('education.core.header')}\n                                        </Item.Header>\n                                        <Item.Meta>\n                                            <FontAwesomeIcon icon={faLaptopCode} />\n                                            &nbsp;\n                                            {t('education.core.subheader')}\n                                        </Item.Meta>\n\n                                        <Item.Description>\n                                            <List bulleted>\n                                                <List.Item>\n                                                    {t('education.core.calc')}\n                                                </List.Item>\n                                                <List.Item>\n                                                    {t('education.core.lin-alg')}\n                                                </List.Item>\n                                                <List.Item>\n                                                    {t('education.core.seq-series')}\n                                                </List.Item>\n                                                <List.Item>\n                                                    {t('education.core.prob-stats')}\n                                                </List.Item>\n                                                <List.Item>\n                                                    {t('education.core.discrete-math')}\n                                                </List.Item>\n                                                <List.Item>\n                                                    {t('education.core.com-thinking')}\n                                                </List.Item>\n                                                <List.Item>\n                                                    {t('education.core.coa')}\n                                                </List.Item>\n                                                <List.Item>\n                                                    {t('education.core.data-struct')}\n                                                </List.Item>\n                                                <List.Item>\n                                                    {t('education.core.algo')}\n                                                </List.Item>\n                                                <List.Item>\n                                                    {t('education.core.oodp')}\n                                                </List.Item>\n                                                <List.Item>\n                                                    {t('education.core.com-graph')}\n                                                </List.Item>\n                                                <List.Item>\n                                                    {t('education.core.hci')}\n                                                </List.Item>\n                                                <List.Item>\n                                                    {t('education.core.os')}\n                                                </List.Item>\n                                                <List.Item>\n                                                    {t('education.core.se')}\n                                                </List.Item>\n                                                <List.Item>\n                                                    {t('education.core.db')}\n                                                </List.Item>\n                                                <List.Item>\n                                                    {t('education.core.ssad')}\n                                                </List.Item>\n                                                <List.Item>\n                                                    {t('education.core.net')}\n                                                </List.Item>\n                                                <List.Item>\n                                                    {t('education.core.compiler')}\n                                                </List.Item>\n                                                <List.Item>\n                                                    {t('education.core.embedded')}\n                                                </List.Item>\n                                            </List>\n                                        </Item.Description>\n                                    </Item.Content>\n                                </Item>\n                            </Item.Group>\n                        </Grid.Column>\n\n                        <Grid.Column>\n                            <Item.Group>\n                                <Item>\n                                    <Item.Content>\n                                        <Item.Header>\n                                            {t('education.elect-focus.header')}\n                                        </Item.Header>\n                                        <Item.Meta>\n                                            <FontAwesomeIcon icon={faRobot} />\n                                            &nbsp;\n                                            {t('education.elect-focus.subheader')}\n                                        </Item.Meta>\n\n                                        <Item.Description>\n                                            <List bulleted>\n                                                <List.Item>\n                                                    {t('education.elect-focus.var')}\n                                                </List.Item>\n                                                <List.Item>\n                                                    {t('education.elect-focus.cv')}\n                                                </List.Item>\n                                                <List.Item>\n                                                    {t('education.elect-focus.ml')}\n                                                </List.Item>\n                                                <List.Item>\n                                                    {t('education.elect-focus.nn')}\n                                                </List.Item>\n                                                <List.Item>\n                                                    {t('education.elect-focus.nlp')}\n                                                </List.Item>\n                                                <List.Item>\n                                                    {t('education.elect-focus.ia')}\n                                                </List.Item>\n                                            </List>\n                                        </Item.Description>\n                                    </Item.Content>\n                                </Item>\n                            </Item.Group>\n                        </Grid.Column>\n\n                        <Grid.Column>\n                            <Item.Group>\n                                <Item>\n                                    <Item.Content>\n                                        <Item.Header>\n                                            {t('education.minor.header')}\n                                        </Item.Header>\n                                        <Item.Meta>\n                                            <FontAwesomeIcon icon={faBrain} />\n                                            &nbsp;\n                                            {t('education.minor.subheader')}\n                                        </Item.Meta>\n\n                                        <Item.Description>\n                                            <List bulleted>\n                                                <List.Item>\n                                                    {t('education.minor.so-sci')}\n                                                </List.Item>\n                                                <List.Item>\n                                                    {t('education.minor.cog-psy')}\n                                                </List.Item>\n                                                <List.Item>\n                                                    {t('education.minor.sense-percept')}\n                                                </List.Item>\n                                                <List.Item>\n                                                    {t('education.minor.human-lang')}\n                                                </List.Item>\n                                            </List>\n                                        </Item.Description>\n                                    </Item.Content>\n                                </Item>\n                            </Item.Group>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </Container>\n        </Container>\n    );\n}\n\nexport default Education;","export default __webpack_public_path__ + \"static/media/dbs_logo.55729c35.png\";","export default __webpack_public_path__ + \"static/media/auralaid_logo.ddc2f44d.png\";","export default __webpack_public_path__ + \"static/media/ovt_logo.da68fb14.png\";","import React from 'react';\n\nimport {\n    Container,\n    Header,\n    Label,\n    Image,\n} from 'semantic-ui-react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faBriefcase,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport {\n    VerticalTimeline,\n    VerticalTimelineElement,\n} from 'react-vertical-timeline-component';\n\nimport 'react-vertical-timeline-component/style.min.css';\nimport './Experience.css';\n\nimport DBSLogo from '../../assets/images/dbs_logo.png';\nimport AuralAidLogo from '../../assets/images/auralaid_logo.png';\nimport OVTLogo from '../../assets/images/ovt_logo.png';\n\nfunction Experience(props) {\n    const { t } = props;\n\n    return (\n        <Container>\n            <Header\n                size='large'\n            >\n                <Header.Content>\n                    <FontAwesomeIcon icon={faBriefcase} />\n                    &nbsp;\n                    {t('experience.header')}\n                </Header.Content>\n            </Header>\n\n            <VerticalTimeline className='VerticalTimeline'>\n            <VerticalTimelineElement\n                    className='VerticalTimelineElement'\n                    contentStyle={{ background: '#ee2f2f', color: 'white' }}\n                    contentArrowStyle={{ borderRight: '7px solid #ee2f2f' }}\n                    date={t('experience.dbs.date')}\n                    dateClassName='TimelineDate'\n                    icon={<Image src={DBSLogo} circular />}\n                >\n                    <h3 className='TimelineText'>{t('experience.dbs.company-name')}</h3>\n                    <h4 className='TimelineText'>{t('experience.dbs.job-title')}</h4>\n                    <ul>\n                        <li>\n                            {t('experience.dbs.point1')}\n                        </li>\n                    </ul>\n\n                    <Label.Group>\n                        <Label>Spring Boot</Label>\n                    </Label.Group>\n                </VerticalTimelineElement>\n\n                <VerticalTimelineElement\n                    className='VerticalTimelineElement'\n                    contentStyle={{ background: 'dodgerblue', color: 'white' }}\n                    contentArrowStyle={{ borderRight: '7px solid dodgerblue' }}\n                    date={t('experience.aural-aid.date')}\n                    dateClassName='TimelineDate'\n                    icon={<Image src={AuralAidLogo} circular />}\n                    iconClassName='AuralAidIcon'\n                >\n                    <h3 className='TimelineText'>{t('experience.aural-aid.company-name')}</h3>\n                    <h4 className='TimelineText'>{t('experience.aural-aid.job-title')}</h4>\n                    <ul>\n                        <li>\n                            {t('experience.aural-aid.point1')} (<a\n                                className='AutoscrapeLink'\n                                target='_blank'\n                                rel='noopener noreferrer'\n                                href='https://autoscrape.com'\n                            >\n                                <u>autoscrape.com</u>\n                            </a>)\n                        </li>\n                        <li>\n                            {t('experience.aural-aid.point2')}\n                        </li>\n                    </ul>\n\n                    <Label.Group>\n                        <Label>Django</Label>\n                        <Label>Bootstrap</Label>\n                        <Label>Scrapy</Label>\n                        <Label>Pyppeteer</Label>\n                        <Label>Flutter</Label>\n                        <Label>AWS</Label>\n                    </Label.Group>\n                </VerticalTimelineElement>\n\n                <VerticalTimelineElement\n                    contentStyle={{ background: '#EA1102', color: 'white' }}\n                    contentArrowStyle={{ borderRight: '7px solid #EA1102' }}\n                    date={t('experience.omnivision.date')}\n                    dateClassName='TimelineDate'\n                    icon={<Image src={OVTLogo} circular />}\n                >\n                    <h3 className='TimelineText'>{t('experience.omnivision.company-name')}</h3>\n                    <h4 className='TimelineText'>{t('experience.omnivision.job-title')}</h4>\n                    <ul>\n                        <li>\n                        {t('experience.omnivision.point1')}\n                        </li>\n                        <li>\n                        {t('experience.omnivision.point2')}\n                        </li>\n                    </ul>\n\n                    <Label.Group>\n                        <Label>Django</Label>\n                        <Label>Bootstrap</Label>\n                        <Label>D3.js</Label>\n                        <Label>Nginx</Label>\n                        <Label>uWSGI</Label>\n                    </Label.Group>\n                </VerticalTimelineElement>\n            </VerticalTimeline>\n        </Container>\n    );\n}\n\nexport default Experience;","import React from 'react';\n\nimport {\n    Card,\n    Container,\n    Header,\n    Label,\n    Icon,\n} from 'semantic-ui-react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faTasks,\n} from '@fortawesome/free-solid-svg-icons';\n\nfunction Projects(props) {\n    const { t } = props;\n\n    return (\n        <Container>\n            <Header\n                size='large'\n            >\n                <Header.Content>\n                    <FontAwesomeIcon icon={faTasks} />\n                    &nbsp;\n                    {t('projects.header')}\n                </Header.Content>\n            </Header>\n\n            <Card.Group itemsPerRow={2} centered doubling stackable>\n                <Card fluid>\n                    <Card.Content>\n                        <Card.Header>\n                            {t('projects.fyp.header')}\n                        </Card.Header>\n                        <Card.Description>\n                            {t('projects.fyp.subheader')}\n                        </Card.Description>\n                        <Card.Meta>\n                            {t('projects.fyp.date')}\n                        </Card.Meta>\n\n                        <Card.Description>\n                            <ul>\n                                <li>\n                                    {t('projects.fyp.point1')}\n                                </li>\n                                <li>\n                                    {t('projects.fyp.point2')}\n                                </li>\n                                <li>\n                                    {t('projects.fyp.point3')}\n                                </li>\n                                <li>\n                                    {t('projects.fyp.point4')}\n                                </li>\n                            </ul>\n                        </Card.Description>\n                    </Card.Content>\n\n                    <Card.Content extra>\n                        <Label.Group>\n                            <Label>MXNet</Label>\n                            <Label>Tensorflow</Label>\n                            <Label>LFFD</Label>\n                            <Label>LPRNet</Label>\n                        </Label.Group>\n                    </Card.Content>\n                </Card>\n\n                <Card fluid>\n                    <Card.Content>\n                        <Card.Header>\n                            {t('projects.ureca.header')} (URECA)\n                        </Card.Header>\n                        <Card.Description>\n                            {t('projects.ureca.subheader')}\n                        </Card.Description>\n                        <Card.Meta>\n                            {t('projects.ureca.date')}\n                        </Card.Meta>\n\n                        <Card.Description>\n                            <ul>\n                                <li>\n                                    {t('projects.ureca.point1')}\n                                </li>\n                                <li>\n                                    {t('projects.ureca.point2')}\n                                </li>\n                                <li>\n                                    {t('projects.ureca.point3')}\n                                </li>\n                                <li>\n                                    {t('projects.ureca.point4')}\n                                </li>\n                            </ul>\n                        </Card.Description>\n                    </Card.Content>\n\n                    <Card.Content extra>\n                        <Label.Group>\n                            <Label>Unity</Label>\n                            <Label>Photon Unity Networking</Label>\n                            <Label>Photon Voice</Label>\n                        </Label.Group>\n                    </Card.Content>\n                </Card>\n\n                <Card fluid>\n                    <Card.Content>\n                        <Card.Header>\n                            <Icon name='github' />\n                            <a\n                                target='_blank'\n                                rel='noopener noreferrer'\n                                href='https://github.com/NgoJunHaoJason/CZ4042/tree/master/project'\n                            >\n                                {t('projects.nn.header')}\n                            </a>\n                        </Card.Header>\n                        <Card.Description>\n                            &nbsp;\n                        </Card.Description>\n                        <Card.Meta>\n                            {t('projects.nn.date')}\n                        </Card.Meta>\n\n                        <Card.Description>\n                            <ul>\n                                <li>\n                                    {t('projects.nn.point1')}\n                                </li>\n                            </ul>\n                        </Card.Description>\n                    </Card.Content>\n\n                    <Card.Content extra>\n                        <Label.Group>\n                            <Label>Tensorflow</Label>\n                            <Label>Google Colaboratory</Label>\n                            <Label>Weights and Biases</Label>\n                        </Label.Group>\n                    </Card.Content>\n                </Card>\n\n                <Card fluid>\n                    <Card.Content>\n                        <Card.Header>\n                            <Icon name='github' />\n                            <a\n                                target='_blank'\n                                rel='noopener noreferrer'\n                                href='https://github.com/NgoJunHaoJason/CZ4041/tree/master/project'\n                            >\n                                {t('projects.ml.header')}\n                            </a>\n                        </Card.Header>\n                        <Card.Description>\n                            {t('projects.ml.subheader')}\n                        </Card.Description>\n                        <Card.Meta>\n                            {t('projects.ml.date')}\n                        </Card.Meta>\n\n                        <Card.Description>\n                            <ul>\n                                <li>\n                                    {t('projects.ml.point1')}\n                                </li>\n                            </ul>\n                        </Card.Description>\n                    </Card.Content>\n\n                    <Card.Content extra>\n                        <Label.Group>\n                            <Label>Jupyter Notebook</Label>\n                            <Label>Pandas</Label>\n                            <Label>Scikit-Learn</Label>\n                            <Label>LightGBM</Label>\n                        </Label.Group>\n                    </Card.Content>\n                </Card>\n            </Card.Group>\n        </Container>\n    );\n}\n\nexport default Projects;","import React from 'react';\n\nimport {\n    useTranslation,\n} from 'react-i18next';\n\nimport {\n    Container,\n    Divider,\n    Button,\n} from 'semantic-ui-react';\n\nimport About from './about/About';\nimport Education from './education/Education';\nimport Experience from './experience/Experience';\nimport Projects from './projects/Projects';\n\nimport 'semantic-ui-css/semantic.min.css'\nimport './Resume.css'\n\nfunction Resume() {\n    const { t, i18n } = useTranslation();\n\n    const translateButtonOnClick = () => {\n        const language = (i18n.language === 'en')? 'cn' : 'en';\n        i18n.changeLanguage(language);\n    };\n\n    return (\n        <Container fluid className='App'>\n            {/* this button does nothing, except to centre the header on mobile */}\n            <Button\n                className='TranslateCounterWeight'\n                floated='left'\n                size='mini'\n            >\n                {t('translate')}\n            </Button>\n            \n            <Button\n                floated='right'\n                size='mini'\n                onClick={() => translateButtonOnClick()}\n            >\n                {t('translate')}\n            </Button>\n\n            <About t={t} />\n            <Divider />\n\n            <Education t={t} />\n            <Divider />\n\n            <Experience t={t} />\n            <Divider />\n\n            <Projects t={t} />\n        </Container>\n    );\n}\n\nexport default Resume;\n","import React from 'react';\n\nimport {\n    Container,\n    Dimmer,\n    Loader,\n} from 'semantic-ui-react';\n\nfunction LoadingScreen() {\n    return (\n        <Container fluid>\n            <Dimmer active>\n                <Loader />\n            </Dimmer>\n        </Container>\n    );\n}\n\nexport default LoadingScreen;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport english from './assets/translations/english.json';\nimport chinese from './assets/translations/chinese.json';\n\ni18n\n    .use(initReactI18next)\n    .init({\n        interpolation: { escapeValue: false },\n        lng: 'en',\n        fallbackLng: 'en',\n        resources: {\n            en: {\n                translation: english,\n            },\n            cn: {\n                translation: chinese,\n            },\n        },\n    });\n\nexport default i18n;\n","import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Resume from './resume/Resume';\nimport LoadingScreen from './LoadingScreen';\n\nimport * as serviceWorker from './serviceWorker';\nimport './i18n';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Suspense fallback={<LoadingScreen />}>\n            <Resume />\n        </Suspense>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}