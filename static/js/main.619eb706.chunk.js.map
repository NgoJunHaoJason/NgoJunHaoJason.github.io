{"version":3,"sources":["assets/images/sciurus_96.png","assets/images/auralaid_logo.png","assets/images/ovt_logo.png","resume/about/About.js","resume/education/Education.js","resume/experience/Experience.js","resume/projects/Projects.js","resume/Resume.js","LoadingScreen.js","serviceWorker.js","i18n.js","index.js"],"names":["module","exports","About","props","t","Container","Header","textAlign","size","Content","Image","className","src","ProfilePicture","rounded","Subheader","Card","centered","Description","List","Item","Icon","name","target","rel","href","Education","icon","faGraduationCap","Grid","stackable","doubling","padded","Row","columns","Column","Group","Meta","Extra","divided","faLaptopCode","bulleted","faRobot","faBrain","Experience","faBriefcase","contentStyle","background","color","contentArrowStyle","borderRight","date","dateClassName","AuralAidLogo","circular","iconClassName","Label","OVTLogo","Projects","faTasks","itemsPerRow","fluid","extra","Resume","useTranslation","i18n","Button","floated","onClick","language","changeLanguage","translateButtonOnClick","Divider","LoadingScreen","Dimmer","active","Loader","Boolean","window","location","hostname","match","use","initReactI18next","init","interpolation","escapeValue","lng","fallbackLng","resources","en","translation","english","cn","chinese","ReactDOM","render","StrictMode","fallback","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.619eb706.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sciurus_96.02b0215d.png\";","module.exports = __webpack_public_path__ + \"static/media/auralaid_logo.ad2bc1fb.png\";","module.exports = __webpack_public_path__ + \"static/media/ovt_logo.78bd831b.png\";","import React from 'react';\n\nimport {\n    Card,\n    Container,\n    Header,\n    Image,\n    List,\n} from 'semantic-ui-react';\n\nimport ProfilePicture from '../../assets/images/sciurus_96.png';\nimport './About.css';\n\nfunction About(props) {\n    const { t } = props;\n\n    return (\n        <Container>\n            <Header\n                textAlign='center'\n                size='huge'\n            >\n                <Header.Content>\n                    <Image\n                        className='ProfilePicture'\n                        src={ProfilePicture}\n                        size='tiny'\n                        rounded\n                    />\n                    {t('about.name')}\n                </Header.Content>\n\n                <Header.Subheader>\n                    {t('about.description')}\n                </Header.Subheader>\n            </Header>\n\n            <Card centered>\n                <Card.Content>\n                    <Card.Description>\n                        <List>\n                            <List.Item>\n                                <List.Icon name='mail' />\n                                <List.Content>\n                                    <a\n                                        target='_blank'\n                                        rel='noopener noreferrer'\n                                        href='mailto:c170127@e.ntu.edu.sg'\n                                    >\n                                        c170127@e.ntu.edu.sg\n                                    </a>\n                                </List.Content>\n                            </List.Item>\n\n                            <List.Item>\n                                <List.Icon name='github' />\n                                <List.Content>\n                                    <a\n                                        target='_blank'\n                                        rel='noopener noreferrer'\n                                        href='https://github.com/NgoJunHaoJason'\n                                    >\n                                        {t('about.github')}\n                                    </a>\n                                </List.Content>\n                            </List.Item>\n\n                            <List.Item>\n                                <List.Icon name='linkedin' />\n                                <List.Content>\n                                    <a\n                                        target='_blank'\n                                        rel='noopener noreferrer'\n                                        href='https://www.linkedin.com/in/ngo-jun-hao-jason/'\n                                    >\n                                        {t('about.linkedin')}\n                                    </a>\n                                </List.Content>\n                            </List.Item>\n                        </List>\n                    </Card.Description>\n                </Card.Content>\n            </Card>\n        </Container>\n    );\n}\n\nexport default About;\n","import React from 'react';\n\nimport {\n    Container,\n    Header,\n    Grid,\n    Item,\n    List,\n} from 'semantic-ui-react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faGraduationCap,\n    faLaptopCode,\n    faRobot,\n    faBrain,\n} from '@fortawesome/free-solid-svg-icons';\n\nfunction Education(props) {\n    const { t } = props;\n\n    return (\n        <Container>\n            <Header\n                size='large'\n            >\n                <Header.Content>\n                    <FontAwesomeIcon icon={faGraduationCap} />\n                    &nbsp;\n                    {t('education.header')}\n                </Header.Content>\n            </Header>\n\n            <Container>\n\n\n                <Grid stackable doubling padded='horizontally'>\n                    <Grid.Row columns={1}>\n                        <Grid.Column>\n                            <Item.Group>\n                                <Item>\n                                    <Item.Content>\n                                        <Item.Header>\n                                            {t('education.university.name')}\n                                        </Item.Header>\n                                        <Item.Meta>\n                                            {t('education.university.date')}\n                                        </Item.Meta>\n                                        <Item.Description>\n                                            {t('education.university.degree')}\n                                        </Item.Description>\n                                        <Item.Extra>\n                                            {t('education.university.honours')}, GPA: 4.38 / 5.00\n                                    </Item.Extra>\n                                    </Item.Content>\n                                </Item>\n                            </Item.Group>\n                        </Grid.Column>\n                    </Grid.Row>\n\n                    <Grid.Row columns={3} divided>\n                        <Grid.Column>\n                            <Item.Group>\n                                <Item>\n                                    <Item.Content>\n                                        <Item.Header>\n                                            {t('education.core.header')}\n                                        </Item.Header>\n                                        <Item.Meta>\n                                            <FontAwesomeIcon icon={faLaptopCode} />\n                                            &nbsp;\n                                            {t('education.core.subheader')}\n                                        </Item.Meta>\n\n                                        <Item.Description>\n                                            <List bulleted>\n                                                <List.Item>\n                                                    {t('education.core.calc')}\n                                                </List.Item>\n                                                <List.Item>\n                                                    {t('education.core.lin-alg')}\n                                                </List.Item>\n                                                <List.Item>\n                                                    {t('education.core.seq-series')}\n                                                </List.Item>\n                                                <List.Item>\n                                                    {t('education.core.prob-stats')}\n                                                </List.Item>\n                                                <List.Item>\n                                                    {t('education.core.discrete-math')}\n                                                </List.Item>\n                                                <List.Item>\n                                                    {t('education.core.com-thinking')}\n                                                </List.Item>\n                                                <List.Item>\n                                                    {t('education.core.coa')}\n                                                </List.Item>\n                                                <List.Item>\n                                                    {t('education.core.data-struct')}\n                                                </List.Item>\n                                                <List.Item>\n                                                    {t('education.core.algo')}\n                                                </List.Item>\n                                                <List.Item>\n                                                    {t('education.core.oodp')}\n                                                </List.Item>\n                                                <List.Item>\n                                                    {t('education.core.com-graph')}\n                                                </List.Item>\n                                                <List.Item>\n                                                    {t('education.core.hci')}\n                                                </List.Item>\n                                                <List.Item>\n                                                    {t('education.core.os')}\n                                                </List.Item>\n                                                <List.Item>\n                                                    {t('education.core.se')}\n                                                </List.Item>\n                                                <List.Item>\n                                                    {t('education.core.db')}\n                                                </List.Item>\n                                                <List.Item>\n                                                    {t('education.core.ssad')}\n                                                </List.Item>\n                                                <List.Item>\n                                                    {t('education.core.net')}\n                                                </List.Item>\n                                            </List>\n                                        </Item.Description>\n                                    </Item.Content>\n                                </Item>\n                            </Item.Group>\n                        </Grid.Column>\n\n                        <Grid.Column>\n                            <Item.Group>\n                                <Item>\n                                    <Item.Content>\n                                        <Item.Header>\n                                            {t('education.specialisation.header')}\n                                        </Item.Header>\n                                        <Item.Meta>\n                                            <FontAwesomeIcon icon={faRobot} />\n                                            &nbsp;\n                                            {t('education.specialisation.subheader')}\n                                        </Item.Meta>\n\n                                        <Item.Description>\n                                            <List bulleted>\n                                                <List.Item>\n                                                    {t('education.specialisation.var')}\n                                                </List.Item>\n                                                <List.Item>\n                                                    {t('education.specialisation.ml')}\n                                                </List.Item>\n                                                <List.Item>\n                                                    {t('education.specialisation.ia')}\n                                                </List.Item>\n                                            </List>\n                                        </Item.Description>\n                                    </Item.Content>\n                                </Item>\n                            </Item.Group>\n                        </Grid.Column>\n\n                        <Grid.Column>\n                            <Item.Group>\n                                <Item>\n                                    <Item.Content>\n                                        <Item.Header>\n                                            {t('education.minor.header')}\n                                        </Item.Header>\n                                        <Item.Meta>\n                                            <FontAwesomeIcon icon={faBrain} />\n                                            &nbsp;\n                                            {t('education.minor.subheader')}\n                                        </Item.Meta>\n\n                                        <Item.Description>\n                                            <List bulleted>\n                                                <List.Item>\n                                                    {t('education.minor.intro')}\n                                                </List.Item>\n                                                <List.Item>\n                                                    {t('education.minor.so-sci')}\n                                                </List.Item>\n                                                <List.Item>\n                                                    {t('education.minor.cog-psy')}\n                                                </List.Item>\n                                            </List>\n                                        </Item.Description>\n                                    </Item.Content>\n                                </Item>\n                            </Item.Group>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </Container>\n        </Container>\n    );\n}\n\nexport default Education;","import React from 'react';\n\nimport {\n    Container,\n    Header,\n    Label,\n    Image,\n} from 'semantic-ui-react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faBriefcase,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport {\n    VerticalTimeline,\n    VerticalTimelineElement,\n} from 'react-vertical-timeline-component';\n\nimport 'react-vertical-timeline-component/style.min.css';\nimport './Experience.css';\n\nimport AuralAidLogo from '../../assets/images/auralaid_logo.png';\nimport OVTLogo from '../../assets/images/ovt_logo.png';\n\nfunction Experience(props) {\n    const { t } = props;\n\n    return (\n        <Container>\n            <Header\n                size='large'\n            >\n                <Header.Content>\n                    <FontAwesomeIcon icon={faBriefcase} />\n                    &nbsp;\n                    {t('experience.header')}\n                </Header.Content>\n            </Header>\n\n            <VerticalTimeline className='VerticalTimeline'>\n                <VerticalTimelineElement\n                    className='VerticalTimelineElement'\n                    contentStyle={{ background: 'dodgerblue', color: '#fff' }}\n                    contentArrowStyle={{ borderRight: '7px solid dodgerblue' }}\n                    date={t('experience.aural-aid.date')}\n                    dateClassName='TimelineDate'\n                    icon={<Image src={AuralAidLogo} circular />}\n                    iconClassName='TimelineIcon'\n                >\n                    <h3 className='TimelineText'>{t('experience.aural-aid.company-name')}</h3>\n                    <h4 className='TimelineText'>{t('experience.aural-aid.job-title')}</h4>\n                    <ul>\n                        <li>\n                            {t('experience.aural-aid.point1')} (<a\n                                className='AutoscrapeLink'\n                                target='_blank'\n                                rel='noopener noreferrer'\n                                href='https://autoscrape.com'\n                            >\n                                <u>autoscrape.com</u>\n                            </a>)\n                        </li>\n                        <li>\n                            {t('experience.aural-aid.point2')}\n                        </li>\n                        <li>\n                            {t('experience.aural-aid.point3')}\n                        </li>\n                    </ul>\n\n                    <Label.Group>\n                        <Label>Django</Label>\n                        <Label>Bootstrap</Label>\n                        <Label>Scrapy</Label>\n                        <Label>Pyppeteer</Label>\n                        <Label>Flutter</Label>\n                        <Label>AWS</Label>\n                    </Label.Group>\n                </VerticalTimelineElement>\n\n                <VerticalTimelineElement\n                    contentStyle={{ background: '#EA1102', color: '#fff' }}\n                    contentArrowStyle={{ borderRight: '7px solid #EA1102' }}\n                    date={t('experience.omnivision.date')}\n                    dateClassName='TimelineDate'\n                    icon={<Image src={OVTLogo} circular />}\n                >\n                    <h3 className='TimelineText'>{t('experience.omnivision.company-name')}</h3>\n                    <h4 className='TimelineText'>{t('experience.omnivision.job-title')}</h4>\n                    <ul>\n                        <li>\n                        {t('experience.omnivision.point1')}\n                        </li>\n                        <li>\n                        {t('experience.omnivision.point2')}\n                        </li>\n                    </ul>\n\n                    <Label.Group>\n                        <Label>Django</Label>\n                        <Label>Bootstrap</Label>\n                        <Label>D3.js</Label>\n                        <Label>Nginx</Label>\n                        <Label>uWSGI</Label>\n                    </Label.Group>\n                </VerticalTimelineElement>\n            </VerticalTimeline>\n        </Container>\n    );\n}\n\nexport default Experience;","import React from 'react';\n\nimport {\n    Card,\n    Container,\n    Header,\n    Label,\n    Icon,\n} from 'semantic-ui-react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faTasks,\n} from '@fortawesome/free-solid-svg-icons';\n\nfunction Projects(props) {\n    const { t } = props;\n\n    return (\n        <Container>\n            <Header\n                size='large'\n            >\n                <Header.Content>\n                    <FontAwesomeIcon icon={faTasks} />\n                    &nbsp;\n                    {t('projects.header')}\n                </Header.Content>\n            </Header>\n\n            <Card.Group itemsPerRow={2} centered doubling stackable>\n                <Card fluid>\n                    <Card.Content>\n                        <Card.Header>\n                            <Icon name='github' />\n                            <a\n                                target='_blank'\n                                rel='noopener noreferrer'\n                                href='https://github.com/NgoJunHaoJason/CZ4041'\n                            >\n                                {t('projects.ml.header')}\n                            </a>\n                        </Card.Header>\n                        <Card.Description>\n                            {t('projects.ml.subheader')}\n                        </Card.Description>\n                        <Card.Meta>\n                            {t('projects.ml.date')}\n                        </Card.Meta>\n\n                        <Card.Description>\n                            <ul>\n                                <li>\n                                    {t('projects.ml.point1')}\n                                </li>\n                            </ul>\n                        </Card.Description>\n                    </Card.Content>\n\n                    <Card.Content extra>\n                        <Label.Group>\n                            <Label>Jupyter Notebook</Label>\n                            <Label>Pandas</Label>\n                            <Label>Scikit-Learn</Label>\n                            <Label>LightGBM</Label>\n                        </Label.Group>\n                    </Card.Content>\n                </Card>\n\n                <Card fluid>\n                    <Card.Content>\n                        <Card.Header>\n                            <Icon name='github' />\n                            <a\n                                target='_blank'\n                                rel='noopener noreferrer'\n                                href='https://github.com/NgoJunHaoJason/CZ4001'\n                            >\n                                {t('projects.vr.header')}\n                            </a>\n                        </Card.Header>\n                        <Card.Description>\n                            &nbsp;\n                        </Card.Description>\n                        <Card.Meta>\n                            {t('projects.vr.date')}\n                        </Card.Meta>\n\n                        <Card.Description>\n                            <ul>\n                                <li>\n                                    {t('projects.vr.point1')}\n                                </li>\n                                <li>\n                                    {t('projects.vr.point2')}\n                                </li>\n                            </ul>\n                        </Card.Description>\n                    </Card.Content>\n\n                    <Card.Content extra>\n                        <Label.Group>\n                            <Label>Unity</Label>\n                        </Label.Group>\n                    </Card.Content>\n                </Card>\n\n                <Card fluid>\n                    <Card.Content>\n                        <Card.Header>\n                            {t('projects.ureca.header')} (URECA)\n                        </Card.Header>\n                        <Card.Description>\n                            {t('projects.ureca.subheader')}\n                        </Card.Description>\n                        <Card.Meta>\n                            {t('projects.ureca.date')}\n                        </Card.Meta>\n\n                        <Card.Description>\n                            <ul>\n                                <li>\n                                    {t('projects.ureca.point1')}\n                                </li>\n                                <li>\n                                    {t('projects.ureca.point2')}\n                                </li>\n                            </ul>\n                        </Card.Description>\n                    </Card.Content>\n\n                    <Card.Content extra>\n                        <Label.Group>\n                            <Label>Unity</Label>\n                            <Label>Photon Unity Networking</Label>\n                            <Label>Photon Voice</Label>\n                        </Label.Group>\n                    </Card.Content>\n                </Card>\n\n                <Card fluid>\n                    <Card.Content>\n                        <Card.Header>\n                            <Icon name='github' />\n                            <a\n                                target='_blank'\n                                rel='noopener noreferrer'\n                                href='https://github.com/NgoJunHaoJason/CZ2006'\n                            >\n                                {t('projects.se.header')}\n                            </a>\n                        </Card.Header>\n                        <Card.Description>\n                            &nbsp;\n                        </Card.Description>\n                        <Card.Meta>\n                            {t('projects.se.date')}\n                        </Card.Meta>\n\n                        <Card.Description>\n                            <ul>\n                                <li>\n                                    {t('projects.se.point1')}\n                                </li>\n                            </ul>\n                        </Card.Description>\n                    </Card.Content>\n\n                    <Card.Content extra>\n                        <Label.Group>\n                            <Label>Flutter</Label>\n                            <Label>Postman</Label>\n                        </Label.Group>\n                    </Card.Content>\n                </Card>\n            </Card.Group>\n        </Container>\n    );\n}\n\nexport default Projects;","import React from 'react';\n\nimport {\n    useTranslation,\n} from 'react-i18next';\n\nimport {\n    Container,\n    Divider,\n    Button,\n} from 'semantic-ui-react';\n\nimport About from './about/About';\nimport Education from './education/Education';\nimport Experience from './experience/Experience';\nimport Projects from './projects/Projects';\n\nimport 'semantic-ui-css/semantic.min.css'\nimport './Resume.css'\n\nfunction Resume() {\n    const { t, i18n } = useTranslation();\n\n    const translateButtonOnClick = () => {\n        const language = (i18n.language === 'en')? 'cn' : 'en';\n        i18n.changeLanguage(language);\n    };\n\n    return (\n        <Container fluid className='App'>\n            {/* this button does nothing, except to centre the header on mobile */}\n            <Button\n                className='TranslateCounterWeight'\n                floated='left'\n                size='mini'\n            >\n                {t('translate')}\n            </Button>\n            \n            <Button\n                floated='right'\n                size='mini'\n                onClick={() => translateButtonOnClick()}\n            >\n                {t('translate')}\n            </Button>\n\n            <About t={t} />\n            <Divider />\n\n            <Education t={t} />\n            <Divider />\n\n            <Experience t={t} />\n            <Divider />\n\n            <Projects t={t} />\n        </Container>\n    );\n}\n\nexport default Resume;\n","import React from 'react';\n\nimport {\n    Container,\n    Dimmer,\n    Loader,\n} from 'semantic-ui-react';\n\nfunction LoadingScreen() {\n    return (\n        <Container fluid>\n            <Dimmer active>\n                <Loader />\n            </Dimmer>\n        </Container>\n    );\n}\n\nexport default LoadingScreen;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport english from './translations/english.json';\nimport chinese from './translations/chinese.json';\n\ni18n\n    .use(initReactI18next)\n    .init({\n        interpolation: { escapeValue: false },\n        lng: 'en',\n        fallbackLng: 'en',\n        resources: {\n            en: {\n                translation: english,\n            },\n            cn: {\n                translation: chinese,\n            },\n        },\n    });\n\nexport default i18n;\n","import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Resume from './resume/Resume';\nimport LoadingScreen from './LoadingScreen';\n\nimport * as serviceWorker from './serviceWorker';\nimport './i18n';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Suspense fallback={<LoadingScreen />}>\n            <Resume />\n        </Suspense>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}