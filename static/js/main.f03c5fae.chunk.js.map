{"version":3,"sources":["assets/images/smiley_face.jpg","resume/about/About.tsx","resume/education/Education.tsx","resume/experience/Experience.tsx","assets/images/dbs_logo.png","assets/images/auralaid_logo.png","assets/images/ovt_logo.png","resume/projects/Projects.tsx","resume/Resume.js","LoadingScreen.js","serviceWorker.js","i18n.js","index.js"],"names":["About","props","t","Container","Header","textAlign","size","Content","Image","className","src","ProfilePicture","rounded","bordered","Subheader","Card","centered","Description","List","returnObjects","map","item","Item","Icon","name","icon","target","rel","href","url","text","sectionIcons","faLaptopCode","faRobot","faBrain","University","university","Grid","Column","Group","Meta","date","degree","honours","gpa","Extra","certURL","cert","verifyURL","verify","Section","section","header","subheader","bulleted","subjects","subject","Education","faGraduationCap","stackable","doubling","padded","Row","columns","divided","companyLogos","Experience","faBriefcase","job","contentStyle","contentArrowStyle","dateClassName","logo","circular","iconClassName","companyName","jobTitle","description","Label","technologies","ProjectTitle","Projects","faTasks","itemsPerRow","project","fluid","extra","Resume","useTranslation","i18n","Button","floated","onClick","language","changeLanguage","translateButtonOnClick","Divider","LoadingScreen","Dimmer","active","Loader","Boolean","window","location","hostname","match","use","initReactI18next","init","interpolation","escapeValue","lng","fallbackLng","resources","en","translation","english","cn","chinese","ReactDOM","render","StrictMode","fallback","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f03c5fae.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/smiley_face.110edfed.jpg\";","import {\n    Card,\n    Container,\n    Header,\n    Image,\n    List,\n} from 'semantic-ui-react';\n\nimport ProfilePicture from '../../assets/images/smiley_face.jpg';\nimport './About.css';\n\nfunction About(props: any) {\n    const { t } = props;\n\n    return (\n        <Container>\n            <Header\n                textAlign='center'\n                size='huge'\n            >\n                <Header.Content>\n                    <Image\n                        className='ProfilePicture'\n                        src={ProfilePicture}\n                        size='tiny'\n                        rounded\n                        bordered\n                    />\n                    {t('about.name')}\n                </Header.Content>\n\n                <Header.Subheader>\n                    {t('about.description')}\n                </Header.Subheader>\n            </Header>\n\n            <Card centered>\n                <Card.Content>\n                    <Card.Description>\n                        <List>\n                            {t('about.items', { returnObjects: true }).map((item: any) => (\n                                <List.Item>\n                                    <List.Icon name={item.icon} />\n                                    <List.Content>\n                                        <a\n                                            target='_blank'\n                                            rel='noopener noreferrer'\n                                            href={item.url}\n                                        >\n                                            {item.text}\n                                        </a>\n                                    </List.Content>\n                                </List.Item>\n                            ))}\n                        </List>\n                    </Card.Description>\n                </Card.Content>\n            </Card>\n        </Container>\n    );\n}\n\nexport default About;\n","import React from 'react';\n\nimport {\n    Container,\n    Header,\n    Grid,\n    Item,\n    List,\n} from 'semantic-ui-react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faGraduationCap,\n    faLaptopCode,\n    faRobot,\n    faBrain,\n    IconDefinition\n} from '@fortawesome/free-solid-svg-icons';\n\nconst sectionIcons: { [key: string]: IconDefinition } = {\n    'faLaptopCode': faLaptopCode,\n    'faRobot': faRobot,\n    'faBrain': faBrain,\n};\n\nfunction University(props: any) {\n    const { university } = props;\n\n    return (\n        <Grid.Column>\n            <Item.Group>\n                <Item>\n                    <Item.Content>\n                        <Item.Header>\n                            {university.name}\n                        </Item.Header>\n                        <Item.Meta>\n                            {university.date}\n                        </Item.Meta>\n                        <Item.Description>\n                            {university.degree}\n                        </Item.Description>\n                        <Item.Description>\n                            {university.honours}, {university.gpa}\n                        </Item.Description>\n                        <Item.Extra>\n                            <a\n                                target='_blank'\n                                rel='noopener noreferrer'\n                                href={university.certURL}\n                            >\n                                {university.cert}\n                            </a>\n                            (<a\n                                target='_blank'\n                                rel='noopener noreferrer'\n                                href={university.verifyURL}\n                            >\n                                {university.verify}\n                            </a>)\n                        </Item.Extra>\n                    </Item.Content>\n                </Item>\n            </Item.Group>\n        </Grid.Column>\n    );\n}\n\nfunction Section(props: any) {\n    const { section } = props;\n\n    return (\n        <Grid.Column>\n            <Item.Group>\n                <Item>\n                    <Item.Content>\n                        <Item.Header>\n                            {section.header}\n                        </Item.Header>\n                        <Item.Meta>\n                            <FontAwesomeIcon icon={sectionIcons[section.icon]} />\n                            &nbsp;\n                            {section.subheader}\n                        </Item.Meta>\n\n                        <Item.Description>\n                            <List bulleted>\n                                {section.subjects.map((subject: any) => (\n                                    <List.Item>{subject}</List.Item>\n                                ))}\n                            </List>\n                        </Item.Description>\n                    </Item.Content>\n                </Item>\n            </Item.Group>\n        </Grid.Column>\n    );\n}\n\nfunction Education(props: any) {\n    const { t } = props;\n\n    return (\n        <Container>\n            <Header\n                size='large'\n            >\n                <Header.Content>\n                    <FontAwesomeIcon icon={faGraduationCap} />\n                    &nbsp;\n                    {t('education.header')}\n                </Header.Content>\n            </Header>\n\n            <Container>\n                <Grid stackable doubling padded='horizontally'>\n                    <Grid.Row columns={1}>\n                        <University university={t('education.university', { returnObjects: true })} />\n                    </Grid.Row>\n\n                    <Grid.Row columns={3} divided>\n                        {t('education.sections', { returnObjects: true })\n                            .map((section: any) => (\n                                <Section section={section} />\n                            ))}\n                    </Grid.Row>\n                </Grid>\n            </Container>\n        </Container>\n    );\n}\n\nexport default Education;","import React from 'react';\n\nimport {\n    Container,\n    Header,\n    Label,\n    Image,\n} from 'semantic-ui-react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faBriefcase,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport {\n    VerticalTimeline,\n    VerticalTimelineElement,\n} from 'react-vertical-timeline-component';\n\nimport 'react-vertical-timeline-component/style.min.css';\nimport './Experience.css';\n\nimport dbsLogo from '../../assets/images/dbs_logo.png';\nimport auralaidLogo from '../../assets/images/auralaid_logo.png';\nimport ovtLogo from '../../assets/images/ovt_logo.png';\n\nconst companyLogos: { [key: string]: string } = {\n    'dbsLogo': dbsLogo,\n    'auralaidLogo': auralaidLogo,\n    'ovtLogo': ovtLogo,\n};\n\nfunction Experience(props: any) {\n    const { t } = props;\n\n    return (\n        <Container>\n            <Header\n                size='large'\n            >\n                <Header.Content>\n                    <FontAwesomeIcon icon={faBriefcase} />\n                    &nbsp;\n                    {t('experience.header')}\n                </Header.Content>\n            </Header>\n\n            <VerticalTimeline className='VerticalTimeline'>\n                {t('experience.jobs', { returnObjects: true }).map((job: any) => (\n                    <VerticalTimelineElement\n                        className='VerticalTimelineElement'\n                        contentStyle={job.contentStyle}\n                        contentArrowStyle={job.contentArrowStyle}\n                        date={job.date}\n                        dateClassName='TimelineDate'\n                        icon={<Image src={companyLogos[job.logo]} circular />}\n                        iconClassName={job.iconClassName}\n                    >\n                        <h3 className='TimelineText'>{job.companyName}</h3>\n                        <h4 className='TimelineText'>{job.jobTitle}</h4>\n                        <ul>\n                            {job.description.map((item: any) => (<li>{item}</li>))}\n                        </ul>\n\n                        <Label.Group>\n                            {job.technologies.map((item: any) => (<Label>{item}</Label>))}\n                        </Label.Group>\n                    </VerticalTimelineElement>\n                ))}\n            </VerticalTimeline>\n        </Container>\n    );\n}\n\nexport default Experience;","export default __webpack_public_path__ + \"static/media/dbs_logo.55729c35.png\";","export default __webpack_public_path__ + \"static/media/auralaid_logo.ddc2f44d.png\";","export default __webpack_public_path__ + \"static/media/ovt_logo.da68fb14.png\";","import {\n    Card,\n    Container,\n    Header,\n    Label,\n} from 'semantic-ui-react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTasks } from '@fortawesome/free-solid-svg-icons';\n\n// display title as a link only if it exists\nfunction ProjectTitle(props: any) {\n    const { header, url } = props;\n\n    if (url === '') {\n        return (header);\n    } else {\n        return (\n            <a\n                target='_blank'\n                rel='noopener noreferrer'\n                href={url}\n            >\n                {header}\n            </a> \n        );\n    }\n}\n\nfunction Projects(props: any) {\n    const { t } = props;\n\n    return (\n        <Container>\n            <Header\n                size='large'\n            >\n                <Header.Content>\n                    <FontAwesomeIcon icon={faTasks} />\n                    &nbsp;\n                    {t('projects.header')}\n                </Header.Content>\n            </Header>\n\n            <Card.Group itemsPerRow={2} centered doubling stackable>\n                {t('projects.list', { returnObjects: true }).map((project: any) => (\n                    <Card fluid>\n                        <Card.Content>\n                            <Card.Header>\n                                <ProjectTitle header={project.header} url={project.url} />\n                            </Card.Header>\n                            <Card.Description>\n                                {t(project.subheader)}\n                            </Card.Description>\n                            <Card.Meta>\n                                {t(project.date)}\n                            </Card.Meta>\n\n                            <Card.Description>\n                                <ul>\n                                    {project.description.map((item: any) => (<li>{item}</li>))}\n                                </ul>\n                            </Card.Description>\n                        </Card.Content>\n\n                        <Card.Content extra>\n                            <Label.Group>\n                                {project.technologies.map((item: any) => (<Label>{item}</Label>))}\n                            </Label.Group>\n                        </Card.Content>\n                    </Card>\n                ))}\n            </Card.Group>\n        </Container>\n    );\n}\n\nexport default Projects;\n","import React from 'react';\n\nimport { useTranslation } from 'react-i18next';\n\nimport {\n    Container,\n    Divider,\n    Button,\n} from 'semantic-ui-react';\n\nimport About from './about/About';\nimport Education from './education/Education';\nimport Experience from './experience/Experience';\nimport Projects from './projects/Projects';\n\nimport 'semantic-ui-css/semantic.min.css'\nimport './Resume.css'\n\nfunction Resume() {\n    const { t, i18n } = useTranslation();\n\n    const translateButtonOnClick = () => {\n        const language = (i18n.language === 'en')? 'cn' : 'en';\n        i18n.changeLanguage(language);\n    };\n\n    return (\n        <Container fluid className='App'>\n            {/* this button does nothing, except to centre the header on mobile */}\n            <Button\n                className='TranslateCounterWeight'\n                floated='left'\n                size='mini'\n            >\n                {t('language')}\n            </Button>\n            \n            <Button\n                floated='right'\n                size='mini'\n                onClick={() => translateButtonOnClick()}\n            >\n                {t('language')}\n            </Button>\n\n            <About t={t} />\n            <Divider />\n\n            <Education t={t} />\n            <Divider />\n\n            <Experience t={t} />\n            <Divider />\n\n            <Projects t={t} />\n        </Container>\n    );\n}\n\nexport default Resume;\n","import React from 'react';\n\nimport {\n    Container,\n    Dimmer,\n    Loader,\n} from 'semantic-ui-react';\n\nfunction LoadingScreen() {\n    return (\n        <Container fluid>\n            <Dimmer active>\n                <Loader />\n            </Dimmer>\n        </Container>\n    );\n}\n\nexport default LoadingScreen;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport english from './assets/translations/english.json';\nimport chinese from './assets/translations/chinese.json';\n\ni18n\n    .use(initReactI18next)\n    .init({\n        interpolation: { escapeValue: false },\n        lng: 'en',\n        fallbackLng: 'en',\n        resources: {\n            en: {\n                translation: english,\n            },\n            cn: {\n                translation: chinese,\n            },\n        },\n    });\n\nexport default i18n;\n","import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Resume from './resume/Resume';\nimport LoadingScreen from './LoadingScreen';\n\nimport * as serviceWorker from './serviceWorker';\nimport './i18n';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Suspense fallback={<LoadingScreen />}>\n            <Resume />\n        </Suspense>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}