{"version":3,"sources":["assets/images/sciurus_96.png","portfolio/about/About.js","portfolio/education/Education.js","portfolio/experience/Experience.js","portfolio/projects/Projects.js","portfolio/App.js","serviceWorker.js","index.js"],"names":["module","exports","About","Container","Header","textAlign","size","Content","Image","className","src","ProfilePicture","rounded","Subheader","Card","centered","Description","List","Item","Icon","name","target","rel","href","Education","text","Experience","Projects","App","fluid","Divider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mGAAAA,EAAOC,QAAU,IAA0B,wC,8OCqF5BC,MAxEf,WACI,OACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIC,UAAU,SACVC,KAAK,QAEL,kBAACF,EAAA,EAAOG,QAAR,KACI,kBAACC,EAAA,EAAD,CACIC,UAAU,iBACVC,IAAKC,IACLL,KAAK,OACLM,SAAO,IALf,aAUA,kBAACR,EAAA,EAAOS,UAAR,iCAKJ,kBAACC,EAAA,EAAD,CAAMC,UAAQ,GACV,kBAACD,EAAA,EAAKP,QAAN,KACI,kBAACO,EAAA,EAAKE,YAAN,KACI,kBAACC,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,KAAN,KACI,kBAACD,EAAA,EAAKE,KAAN,CAAWC,KAAK,SAChB,kBAACH,EAAA,EAAKV,QAAN,KACI,uBACIc,OAAO,SACPC,IAAI,sBACJC,KAAK,+BAHT,0BAUR,kBAACN,EAAA,EAAKC,KAAN,KACI,kBAACD,EAAA,EAAKE,KAAN,CAAWC,KAAK,WAChB,kBAACH,EAAA,EAAKV,QAAN,KACI,uBACIc,OAAO,SACPC,IAAI,sBACJC,KAAK,qCAHT,YAUR,kBAACN,EAAA,EAAKC,KAAN,KACI,kBAACD,EAAA,EAAKE,KAAN,CAAWC,KAAK,aAChB,kBAACH,EAAA,EAAKV,QAAN,KACI,uBACIc,OAAO,SACPC,IAAI,sBACJC,KAAK,kDAHT,oBC1CrBC,MAnBf,WACI,OACI,kBAACrB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIC,UAAU,SACVC,KAAK,SAEL,kBAACF,EAAA,EAAOG,QAAR,mBAKJ,kBAACJ,EAAA,EAAD,CAAWsB,MAAI,GAAf,iBCOGC,MAnBf,WACI,OACI,kBAACvB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIC,UAAU,SACVC,KAAK,SAEL,kBAACF,EAAA,EAAOG,QAAR,oBAKJ,kBAACJ,EAAA,EAAD,CAAWsB,MAAI,GAAf,iBCOGE,MAnBf,WACI,OACI,kBAACxB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIC,UAAU,SACVC,KAAK,SAEL,kBAACF,EAAA,EAAOG,QAAR,kBAKJ,kBAACJ,EAAA,EAAD,CAAWsB,MAAI,GAAf,iB,cCUGG,MAdf,WACI,OACI,kBAACzB,EAAA,EAAD,CAAW0B,OAAK,EAACpB,UAAU,OACvB,kBAAC,EAAD,MACA,kBAACqB,EAAA,EAAD,MACA,kBAAC,EAAD,MACA,kBAACA,EAAA,EAAD,MACA,kBAAC,EAAD,MACA,kBAACA,EAAA,EAAD,MACA,kBAAC,EAAD,QCZQC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,SD0HtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.5b200a8d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sciurus_96.02b0215d.png\";","import React from 'react';\n\nimport {\n    Card,\n    Container,\n    Header,\n    Image,\n    List,\n} from 'semantic-ui-react';\n\nimport ProfilePicture from '../../assets/images/sciurus_96.png';\nimport './About.css';\n\nfunction About() {\n    return (\n        <Container>\n            <Header\n                textAlign=\"center\"\n                size=\"huge\"\n            >\n                <Header.Content>\n                    <Image\n                        className=\"ProfilePicture\"\n                        src={ProfilePicture}\n                        size=\"tiny\"\n                        rounded\n                    />\n                    Jason Ngo\n                </Header.Content>\n\n                <Header.Subheader>\n                    CS undergraduate at NTU\n                </Header.Subheader>\n            </Header>\n\n            <Card centered>\n                <Card.Content>\n                    <Card.Description>\n                        <List>\n                            <List.Item>\n                                <List.Icon name=\"mail\" />\n                                <List.Content>\n                                    <a\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                        href=\"mailto:c170127@e.ntu.edu.sg\"\n                                    >\n                                        c170127@e.ntu.edu.sg\n                                    </a>\n                                </List.Content>\n                            </List.Item>\n\n                            <List.Item>\n                                <List.Icon name=\"github\" />\n                                <List.Content>\n                                    <a\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                        href=\"https://github.com/NgoJunHaoJason\"\n                                    >\n                                        GitHub\n                                    </a>\n                                </List.Content>\n                            </List.Item>\n\n                            <List.Item>\n                                <List.Icon name=\"linkedin\" />\n                                <List.Content>\n                                    <a\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                        href=\"https://www.linkedin.com/in/ngo-jun-hao-jason/\"\n                                    >\n                                        LinkedIn\n                                    </a>\n                                </List.Content>\n                            </List.Item>\n                        </List>\n                    </Card.Description>\n                </Card.Content>\n            </Card>\n        </Container>\n    );\n}\n\nexport default About;\n","import React from 'react';\n\nimport {\n    Container,\n    Header,\n} from 'semantic-ui-react';\n\nfunction Education() {\n    return (\n        <Container>\n            <Header\n                textAlign=\"center\"\n                size=\"large\"\n            >\n                <Header.Content>\n                    Education\n                </Header.Content>\n            </Header>\n\n            <Container text>\n                Coming Soon\n            </Container>\n        </Container>\n    );\n}\n\nexport default Education;","import React from 'react';\n\nimport {\n    Container,\n    Header,\n} from 'semantic-ui-react';\n\nfunction Experience() {\n    return (\n        <Container>\n            <Header\n                textAlign=\"center\"\n                size=\"large\"\n            >\n                <Header.Content>\n                    Experience\n                </Header.Content>\n            </Header>\n\n            <Container text>\n                Coming Soon\n            </Container>\n        </Container>\n    );\n}\n\nexport default Experience;","import React from 'react';\n\nimport {\n    Container,\n    Header\n} from 'semantic-ui-react';\n\nfunction Projects() {\n    return (\n        <Container>\n            <Header\n                textAlign=\"center\"\n                size=\"large\"\n            >\n                <Header.Content>\n                    Projects\n                </Header.Content>\n            </Header>\n\n            <Container text>\n                Coming Soon\n            </Container>\n        </Container>\n    );\n}\n\nexport default Projects;","import React from 'react';\n\nimport {\n    Container,\n    Divider,\n} from 'semantic-ui-react';\n\nimport About from './about/About';\nimport Education from './education/Education';\nimport Experience from './experience/Experience';\nimport Projects from './projects/Projects';\n\nimport 'semantic-ui-css/semantic.min.css'\nimport './App.css'\n\nfunction App() {\n    return (\n        <Container fluid className=\"App\">\n            <About />\n            <Divider />\n            <Education />\n            <Divider />\n            <Experience />\n            <Divider />\n            <Projects />\n        </Container>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './portfolio/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}